import numpy as np
import matplotlib.pyplot as plt


def Function(x):
    return np.array(
        [2*x[0]*x[1]**2 - 3*x[1]*x[0]**2 - 2,
         (x[0]**2)*x[1]**3 + 2*x[0]*x[1] - 12])


def Jacobian(x):
    return np.array(
        [[2 * x[1]**2 - 6*x[0]*x[1], 4*x[1]*x[0] - 3*x[0]**2],
         [2*x[0]*x[1]**3 + 2*x[1],3*(x[0]**2)*x[1]**2 + 2*x[0]]])


def Newton(F, J, x, eps):
    F_value = F(x)
    F_norm = np.linalg.norm(F_value, ord=2)
    it = 0
    while abs(F_norm) > eps:
        delta = np.linalg.solve(J(x), -F_value)
        x = x + delta
        F_value = F(x)
        F_norm = np.linalg.norm(F_value, ord=2)
        print(F_norm)
        print(it)
        it += 1
        #print(x)
    if abs(F_norm) > eps:
        it = -1
    return x, it

print("dla r=[10,4]")
r, n = Newton(Function, Jacobian, np.array([10, -4]), eps=1e-6)
print(r)
print(n)
print("dla r=[10,10]")
r, n = Newton(Function, Jacobian, np.array([10, 10]), eps=1e-6)
print(r)
print(n)

y_2 = [-4.0, -4.26352705, -5.09347543,17.25171475,11.27047343, 8.41265722, 6.53322498, 5.15804804,4.10832672, 3.29859627, 2.68797603, 2.26890837, 2.05284749, 2.0013854 , 1.99996806, 2., 2.]
x_2 = [10.0, 3.97344689,0.78543522,5.40722975,5.51363341,4.84975874,4.04352593,3.28963638,2.63981399,2.09772253,1.65551545,1.31330716,1.09232037,1.00894045,1.00007093,1.,1.]
#plt.plot(y_2, x_2, color='red', label='f(f)')
#plt.show()
x_1 = [10.0, 8.57136617, 7.14347322, 5.84675237,4.73823584,3.8258748, 3.09882057, 2.54969892, 2.18843054, 2.02651041,1.99998389,1.999993 ]
y_1 = [10.0,7.13784154,5.34595466, 4.12014907, 3.22177339, 2.53250046, 1.98976237,1.56181874,1.24390358,1.05806732,1.0034473,1.00000937  ]
x_3 = [ i for i in range(1,15)]
x_4 = [i for i in range(1,11)]
y_3 = [112.37384842933041,150306.94985455993,43635.19795066566,14073.496969788846,4600.24457199845,1507.0337081956159,492.908253596534,159.77600073818996,50.12859463477655,14.106990645112417,2.8104564249359267,0.20132071029007895,0.0010677825945936336,3.499212024201104e-08]
y_4 = [3429.117975896399,1122.7219773477295,366.5438073352003,118.145910638803,36.39828797966959,9.664513753539648,1.6094655937631541,0.07021201851023204,0.00011755710401008224,8.676137461066807e-10]

fig = plt.figure()
ax = fig.add_subplot(1, 1, 1)
ax.set_yscale('log')
plt.plot(x_4, y_4, color='red',marker="o")
plt.ylabel('norma x')
plt.xlabel('n')
plt.legend()
plt.show()